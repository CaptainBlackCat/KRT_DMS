apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.alibaba.arouter'
apply from: "./local.gradle"

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.krt.application.dms"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        ndk {
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

    signingConfigs {
        release {
            storeFile file('krt-keystore.keystore')
            storePassword project.KEYSTORE_PASSWORD
            keyAlias "krt"
            keyPassword project.KEY_PASSWORD
            v2SigningEnabled false
        }
//        debug {
//            storeFile file("my-debug-key.keystore")
//            storePassword "yt228228"
//            keyAlias "my-debug-key"
//            keyPassword "yt228228"
//        }
    }

    buildTypes {
        debug {
//            signingConfig signingConfigs.release
            minifyEnabled false
            useProguard false
            shrinkResources false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
            manifestPlaceholders = [bugly_app_id: '474573021d', bugly_enable_debug: 'true']
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            useProguard true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
            manifestPlaceholders = [bugly_app_id: 'e60788cb45', bugly_enable_debug: 'false']
        }
    }

    def localVersion = "1.0.0"
    def preVersion = "1.0.0"
    def publishVersion = "1.0.0"

    flavorDimensions "app"
    productFlavors {

        //本地测试
        local {
            multiDexEnabled true
            versionCode 1
            versionName localVersion
            buildConfigField 'String', 'CHECK_APP_UPDATE', "\"http://xiebingfeng.oss-cn-hangzhou.aliyuncs.com/app_pre/androidupdate_pre.txt\""
        }

        //公司调试的版本
        pre {
            multiDexEnabled true
            versionCode 1
            versionName preVersion
            buildConfigField 'String', 'CHECK_APP_UPDATE', "\"http://xiebingfeng.oss-cn-hangzhou.aliyuncs.com/app_pre/androidupdate_pre.txt\""
        }

        // 发布到市场的版本
        publish {
            multiDexEnabled true
            versionCode 1
            versionName publishVersion
            buildConfigField 'String', 'CHECK_APP_UPDATE', "\"http://xiebingfeng.oss-cn-hangzhou.aliyuncs.com/app_pre/androidupdate_pre.txt\""
        }
    }

//    //定义一个装apk文件路径的数组
//    android.applicationVariants.all { variant ->
//        variant.outputs.all { output ->
//            if (outputFile != null && outputFile.name.endsWith('.apk') && outputFile.name.contains('pre-release')) {
//                SimpleDateFormat df = new SimpleDateFormat("MM.dd   HH.mm")
//                variant.getPackageApplicationProvider().outputDirectory = new File("/Users/xiebingfeng/androidApk/" + localVersion + "(" + df.format(new Date()) + ")")
//            } else if (outputFile != null && outputFile.name.endsWith('.apk') && outputFile.name.contains('publish-release')) {
//                SimpleDateFormat df = new SimpleDateFormat("MM.dd   HH.mm")
//                variant.getPackageApplicationProvider().outputDirectory = new File("/Users/xiebingfeng/androidApkRelease/" + publishVersion + "(" + df.format(new Date()) + ")")
//            }
//        }
//    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //test
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"

    kapt "com.alibaba:arouter-compiler:$rootProject.arouterCompilerApi"

    implementation project(':modulelibs:businessModule')
    implementation project(':modulelibs:componentModule')

    //单模块调试
    if (!is_login_module_run_alone.toBoolean())
        runtimeOnly project(':modules:loginModule')
    if (!is_home_module_run_alone.toBoolean())
        runtimeOnly project(':modules:homeModule')
    if (!is_remind_module_run_alone.toBoolean())
        runtimeOnly project(':modules:remindModule')
    if (!is_category_module_run_alone.toBoolean())
        runtimeOnly project(':modules:categoryModule')
    if (!is_submarine_module_run_alone.toBoolean())
        runtimeOnly project(':modules:subModule')
    if (!is_clue_allocation_module_run_alone.toBoolean())
        runtimeOnly project(':modules:clueAllocationModule')

}
